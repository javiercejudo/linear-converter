{"version":3,"sources":["linear-converter.js"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length",1,"module","value","error",2,"isObjectLike","isString","objToString","stringTag","objectProto","Object","prototype","toString",3,"factory","adapter","Decimal","x","assert","this","TypeError","Impl","parseInput","val","getPrecision","setPrecision","JSONReviver","key","newDecimalFromImpl","getInstance","p","plus","minus","times","div","toJSON","valueOf","assert-error","lodash.isstring",4,"isUndefined","undefined",5,"arbitraryPrecision","api","normalise","scale","scale0","Number","linear-arbitrary-precision","lodash.isundefined",6,"normaliseFactory","rescale","oldScale","newScale","newScale0","oldScale0","linear-converter","rescaleFactory","compose2presets","presetA","presetB","map","convert","preset","invertPreset","slice","reverse","composePresets","presets","reduce","getCoefficientA","getCoefficientB"],"mappings":"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","file":"linear-converter.min.js","sourcesContent":["/**\n * linear-converter - Copyright 2015 Javier Cejudo <javier@javiercejudo.com> (http://www.javiercejudo.com)\n * @version v3.0.0\n * @link https://github.com/javiercejudo/linear-converter#readme\n * @license MIT\n */\nrequire=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n// Copyright 2015 Sergii Iefremov\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n'use strict';\nmodule.exports = function(value, error) {\n  if (!error) {\n    throw new Error('error required');\n  }\n\n  if (value) return;\n  throw error;\n};\n\n},{}],2:[function(require,module,exports){\n/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n}\n\nmodule.exports = isString;\n\n},{}],3:[function(require,module,exports){\n/*jshint node:true */\n\n'use strict';\n\nvar isString = require('lodash.isstring');\nvar assert = require('assert-error');\n\nmodule.exports = factory;\n\nfunction factory(adapter) {\n  var Impl = adapter.getInstance();\n\n  function Decimal(x) {\n    assert(this instanceof Decimal, new Error('Decimal must be called with new'));\n    assert(isString(x), new TypeError('Expected a string but instead got ' + typeof x));\n\n    var value = new Impl(adapter.parseInput(x));\n\n    this.val = function val() {\n      return value;\n    };\n  }\n\n  Decimal.getPrecision = getPrecision;\n  Decimal.setPrecision = setPrecision;\n  Decimal.JSONReviver = JSONReviver;\n\n  var p = Decimal.prototype;\n\n  p.plus = function plus(x) {\n    return newDecimalFromImpl(adapter.plus(this.val(), x.val()));\n  };\n\n  p.minus = function minus(x) {\n    return newDecimalFromImpl(adapter.minus(this.val(), x.val()));\n  };\n\n  p.times = function times(x) {\n    return newDecimalFromImpl(adapter.times(this.val(), x.val()));\n  };\n\n  p.div = function div(x) {\n    return newDecimalFromImpl(adapter.div(this.val(), x.val()));\n  };\n\n  p.toString = p.toJSON = function toString() {\n    return adapter.toString(this.val());\n  };\n\n  p.valueOf = function valueOf() {\n    return adapter.valueOf(this.val());\n  };\n\n  function getPrecision() {\n    return adapter.getPrecision(Impl);\n  }\n\n  function setPrecision(n) {\n    adapter.setPrecision(Impl, n);\n  }\n\n  function JSONReviver(key, x) {\n    if (key === '') {\n      return x;\n    }\n\n    return new Decimal(x);\n  }\n\n  function newDecimalFromImpl(x) {\n    return new Decimal(adapter.toString(x))\n  }\n\n  return Decimal;\n}\n\n},{\"assert-error\":1,\"lodash.isstring\":2}],4:[function(require,module,exports){\n/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nmodule.exports = isUndefined;\n\n},{}],5:[function(require,module,exports){\n/*jshint node:true */\n\n'use strict';\n\nvar arbitraryPrecision = require('linear-arbitrary-precision');\nvar isUndefined = require('lodash.isundefined');\n\nmodule.exports = function factory(adapter) {\n  var Decimal = arbitraryPrecision(adapter);\n  var api = {};\n\n  api.normalise = function normalise(x, scale) {\n    if (isUndefined(scale)) {\n      return x;\n    }\n\n    var scale0 = new Decimal(scale[0].toString());\n\n    return Number(\n      new Decimal(x.toString()).minus(scale0)\n        .div(new Decimal(scale[1].toString()).minus(scale0))\n    );\n  };\n\n  return api;\n};\n\n},{\"linear-arbitrary-precision\":3,\"lodash.isundefined\":4}],6:[function(require,module,exports){\n/*jshint node:true */\n\n'use strict';\n\nvar arbitraryPrecision = require('linear-arbitrary-precision');\nvar isUndefined = require('lodash.isundefined');\nvar normaliseFactory = require('normalise');\n\nmodule.exports = function factory(adapter) {\n  var Decimal = arbitraryPrecision(adapter);\n  var normalise = normaliseFactory(adapter).normalise;\n  var api = {};\n\n  api.rescale = function rescale(x, oldScale, newScale) {\n    if (isUndefined(newScale)) {\n      return normalise(x, oldScale);\n    }\n\n    var newScale0 = new Decimal(newScale[0].toString());\n    var oldScale0 = new Decimal(oldScale[0].toString());\n\n    return Number(\n      new Decimal(x.toString()).minus(oldScale0).times(new Decimal(newScale[1].toString()).minus(newScale0))\n        .div(new Decimal(oldScale[1].toString()).minus(oldScale0)).plus(newScale0)\n    );\n  };\n\n  return api;\n};\n\n},{\"linear-arbitrary-precision\":3,\"lodash.isundefined\":4,\"normalise\":5}],\"linear-converter\":[function(require,module,exports){\n/*jshint node:true */\n\n'use strict';\n\nvar arbitraryPrecision = require('linear-arbitrary-precision');\nvar rescaleFactory = require('rescale');\n\nmodule.exports = function factory(adapter) {\n  var Decimal = arbitraryPrecision(adapter);\n  var rescale = rescaleFactory(adapter);\n  var api = {};\n\n  api.rescale = rescale;\n\n  /**\n   * Linearly converts x as described by a preset\n   *\n   * @param  {Number} x The number to be converted\n   * @param  {Array} preset The preset that describes the conversion\n   *\n   * @return {Number} The converted x\n   */\n  api.convert = function convert(x, preset) {\n    return rescale.rescale(x, preset[0], preset[1]);\n  };\n\n  /**\n   * Inverts a preset to change the direction of the conversion\n   *\n   * @param {Array} preset The preset to invert\n   *\n   * @return {Array} The inverted preset\n   */\n  api.invertPreset = function invertPreset(preset) {\n    return preset.slice(0).reverse();\n  };\n\n  /**\n   * Composes two or more presets to create a single preset\n   *\n   * @param {Array} presets The array of the presets to compose\n   *\n   * @return {Array} The composed preset\n   */\n  api.composePresets = function composePresets(presets) {\n    return presets.reduce(compose2presets);\n  };\n\n  /**\n   * Calculates the a coefficient in the f(x) = ax + b function that describes\n   * the given preset.\n   *\n   * @param {Array} preset The preset for which to calculate its a coefficient\n   *\n   * @return {Number} The coefficient a\n   */\n  api.getCoefficientA = function getCoefficientA(preset) {\n    return Number(\n      new Decimal(preset[1][1].toString()).minus(new Decimal(preset[1][0].toString()))\n        .div(new Decimal(preset[0][1].toString()).minus(new Decimal(preset[0][0].toString())))\n    );\n  };\n\n  /**\n   * Calculates the b coefficient in the f(x) = ax + b function that describes\n   * the given preset.\n   *\n   * @param {Array} preset The preset for which to calculate its b coefficient\n   *\n   * @return {Number} The coefficient b\n   */\n  api.getCoefficientB = function getCoefficientB(preset) {\n    return rescale.rescale(0, preset[0], preset[1]);\n  };\n\n  /**\n   * Composes two presets to create a single preset\n   *\n   * @param {Array} presetA The first preset to compose\n   * @param {Array} presetB The second preset to compose\n   *\n   * @return {Array} The composed preset\n   */\n  function compose2presets(presetA, presetB) {\n    return [\n      presetA[0],\n      presetA[1].map(function(x) {\n        return rescale.rescale(x, presetB[0], presetB[1]);\n      })\n    ];\n  }\n\n  return api;\n};\n\n},{\"linear-arbitrary-precision\":3,\"rescale\":6}]},{},[]);\n"],"sourceRoot":"/source/"}