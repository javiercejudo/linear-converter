{"version":3,"sources":["linear-converter.js"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length",1,"module","isUndefined","value","undefined",2,"optionale","optionalDependency","ignore","any","optioanlDependencies","result","every","some","optionalDependencies","lodash.isundefined",3,"decimal","load","isAvailable",4,"normaliseDecimal","x","scale","Decimal","minus","div","normaliseNative","arbitraryPrecision","normalise","Number","rescale-arbitrary-precision",5,"scaleDecimal","times","plus","scaleNative",6,"rescaleDecimal","oldScale","newScale","rescaleNative","rescale","scale-normalised","linear-converter","compose2presets","presetA","presetB","map","getCoefficientANative","preset","getCoefficientADecimal","convert","invertPreset","slice","reverse","composePresets","presets","reduce","getCoefficientA","getCoefficientB"],"mappings":"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","file":"linear-converter.min.js","sourcesContent":["/**\n * linear-converter - Copyright 2015 Javier Cejudo <javier@javiercejudo.com> (http://www.javiercejudo.com)\n * @version v2.1.0\n * @link https://github.com/javiercejudo/linear-converter#readme\n * @license MIT\n */\nrequire=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nmodule.exports = isUndefined;\n\n},{}],2:[function(require,module,exports){\n/*jshint node:true */\n\n'use strict';\n\nvar isUndefined = require('lodash.isundefined');\n\nexports.optionale = optionale;\nexports.any = any;\nexports.some = some;\n\n/**\n * Returns the package for the given name if found or undefined otherwise\n *\n * @param {String} The name of the package to try to load\n *\n * @return {*}\n */\nfunction optionale(optionalDependency) {\n  try {\n    return require(optionalDependency);\n  } catch (ignore) {\n  }\n}\n\n/**\n * Returns the first available package if it exists or undefined otherwise\n *\n * @param {Array} The names of the package to try to load\n *\n * @return {*}\n */\nfunction any(optioanlDependencies) {\n  var result;\n\n  optioanlDependencies.every(function(optionalDependency) {\n    result = optionale(optionalDependency);\n\n    return isUndefined(result);\n  });\n\n  return result;\n}\n\n/**\n * Returns the first available package if it exists or throws Error otherwise\n *\n * @param {Array} The names of the package to try to load\n *\n * @return {*}\n *\n * @throws Error\n */\nfunction some(optionalDependencies) {\n  var result = any(optionalDependencies);\n\n  if (isUndefined(result)) {\n    throw new Error('None of the dependencies could be loaded');\n  }\n\n  return result;\n}\n\n},{\"lodash.isundefined\":1}],3:[function(require,module,exports){\n/*jshint node:true */\n\n'use strict';\n\nvar optionale = require('optionale');\nvar isUndefined = require('lodash.isundefined');\n\nvar decimal;\n\n/**\n * Returns arbitrary precision library if available or undefined otherwise\n *\n * @return {*}\n */\nexports.load = function load() {\n  decimal = optionale.any(['big.js', 'bignumber.js', 'decimal.js']);\n\n  return decimal;\n};\n\n/**\n * Returns true if arbitrary precision is available and false otherwise\n *\n * @return {Boolean} Arbitrary precision availability\n */\nexports.isAvailable = function isAvailable() {\n  return !isUndefined(decimal);\n};\n\n},{\"lodash.isundefined\":1,\"optionale\":2}],4:[function(require,module,exports){\n/*jshint node:true */\n\n'use strict';\n\nvar arbitraryPrecision = require('rescale-arbitrary-precision');\n\nvar Decimal = arbitraryPrecision.load();\n\nexports.normalise = function normalise(x, scale) {\n  if (typeof scale === 'undefined') {\n    return x;\n  }\n\n  if (arbitraryPrecision.isAvailable()) {\n    return Number(normaliseDecimal(x, scale));\n  }\n\n  return normaliseNative(x, scale);\n};\n\nfunction normaliseDecimal(x, scale) {\n  return new Decimal(x).minus(scale[0])\n    .div(new Decimal(scale[1]).minus(scale[0]));\n}\n\nfunction normaliseNative(x, scale) {\n  return (x - scale[0]) / (scale[1] - scale[0]);\n}\n\n},{\"rescale-arbitrary-precision\":3}],5:[function(require,module,exports){\n/*jshint node:true */\n\n'use strict';\n\nvar arbitraryPrecision = require('rescale-arbitrary-precision');\n\nvar Decimal = arbitraryPrecision.load();\n\nexports.scale = function scaleNormalised(x, scale) {\n  if (typeof scale === 'undefined') {\n    return x;\n  }\n\n  if (arbitraryPrecision.isAvailable()) {\n    return Number(scaleDecimal(x, scale));\n  }\n\n  return scaleNative(x, scale);\n};\n\nfunction scaleDecimal(x, scale) {\n  return new Decimal(scale[1]).minus(scale[0]).times(x).plus(scale[0]);\n}\n\nfunction scaleNative(x, scale) {\n  return scale[0] + x * (scale[1] - scale[0]);\n}\n\n},{\"rescale-arbitrary-precision\":3}],6:[function(require,module,exports){\n/*jshint node:true */\n\n'use strict';\n\nvar normalise = require('normalise');\nvar scale = require('scale-normalised');\nvar arbitraryPrecision = require('rescale-arbitrary-precision');\n\nvar Decimal = arbitraryPrecision.load();\n\nexports.rescale = function rescale(x, oldScale, newScale) {\n  if (typeof newScale === 'undefined') {\n    return normalise.normalise(x, oldScale);\n  }\n\n  if (arbitraryPrecision.isAvailable()) {\n    return Number(rescaleDecimal(x, oldScale, newScale));\n  }\n\n  return rescaleNative(x, oldScale, newScale);\n};\n\nfunction rescaleDecimal(x, oldScale, newScale) {\n  return scaleDecimal(normaliseDecimal(x, oldScale), newScale);\n}\n\nfunction normaliseDecimal(x, scale) {\n  return new Decimal(x).minus(scale[0])\n    .div(new Decimal(scale[1]).minus(scale[0]));\n}\n\nfunction scaleDecimal(x, scale) {\n  return new Decimal(scale[1]).minus(scale[0]).times(x).plus(scale[0]);\n}\n\nfunction rescaleNative(x, oldScale, newScale) {\n  return scale.scale(normalise.normalise(x, oldScale), newScale);\n}\n\n},{\"normalise\":4,\"rescale-arbitrary-precision\":3,\"scale-normalised\":5}],\"linear-converter\":[function(require,module,exports){\n/*jshint node:true */\n\n'use strict';\n\nvar rescale = require('rescale');\nvar arbitraryPrecision = require('rescale-arbitrary-precision');\n\nvar Decimal = arbitraryPrecision.load();\n\n/**\n * Linearly converts x as described by a preset\n *\n * @param  {Number} x The number to be converted\n * @param  {Array} preset The preset that describes the conversion\n *\n * @return {Number} The converted x\n */\nexports.convert = function convert(x, preset) {\n  return rescale.rescale(x, preset[0], preset[1]);\n};\n\n/**\n * Inverts a preset to change the direction of the conversion\n *\n * @param {Array} preset The preset to invert\n *\n * @return {Array} The inverted preset\n */\nexports.invertPreset = function invertPreset(preset) {\n  return preset.slice(0).reverse();\n};\n\n/**\n * Composes two or more presets to create a single preset\n *\n * @param {Array} presets The array of the presets to compose\n *\n * @return {Array} The composed preset\n */\nexports.composePresets = function composePresets(presets) {\n  return presets.reduce(compose2presets);\n};\n\n/**\n * Calculates the a coefficient in the f(x) = ax + b function that describes\n * the given preset.\n *\n * @param {Array} preset The preset for which to calculate its a coefficient\n *\n * @return {Number} The coefficient a\n */\nexports.getCoefficientA = function getCoefficientA(preset) {\n  if (arbitraryPrecision.isAvailable()) {\n    return Number(getCoefficientADecimal(preset));\n  }\n\n  return getCoefficientANative(preset);\n};\n\n/**\n * Calculates the b coefficient in the f(x) = ax + b function that describes\n * the given preset.\n *\n * @param {Array} preset The preset for which to calculate its b coefficient\n *\n * @return {Number} The coefficient b\n */\nexports.getCoefficientB = function getCoefficientB(preset) {\n  return rescale.rescale(0, preset[0], preset[1]);\n};\n\n/**\n * Composes two presets to create a single preset\n *\n * @param {Array} presetA The first preset to compose\n * @param {Array} presetB The second preset to compose\n *\n * @return {Array} The composed preset\n */\nfunction compose2presets(presetA, presetB) {\n  return [\n    presetA[0],\n    presetA[1].map(function(x) {\n      return rescale.rescale(x, presetB[0], presetB[1]);\n    })\n  ];\n}\n\n/**\n * Calculates the a coefficient in the f(x) = ax + b function that describes\n * the given preset using floating-point numbers.\n *\n * @param {Array} preset The preset for which to calculate its a coefficient\n *\n * @return {Number} The coefficient a\n */\nfunction getCoefficientANative(preset) {\n  return (preset[1][1] - preset[1][0]) / (preset[0][1] - preset[0][0]);\n}\n\n/**\n * Calculates the a coefficient in the f(x) = ax + b function that describes\n * the given preset using arbitrary precision.\n *\n * @param {Array} preset The preset for which to calculate its a coefficient\n *\n * @return {Big} The coefficient a\n */\nfunction getCoefficientADecimal(preset) {\n  return new Decimal(preset[1][1]).minus(preset[1][0])\n    .div(new Decimal(preset[0][1]).minus(preset[0][0]));\n}\n\n},{\"rescale\":6,\"rescale-arbitrary-precision\":3}]},{},[]);\n"],"sourceRoot":"/source/"}